<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>baseimages</artifactId>
        <groupId>com.optiscangroup.docker</groupId>
        <version>1.3-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>alpine-java8</artifactId>

    <properties>
        <JAVA_VERSION>8</JAVA_VERSION>
        <JAVA_UPDATE>102</JAVA_UPDATE>
        <JAVA_BUILD>14</JAVA_BUILD>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>alpine-java8</name>
                            <registry>${docker.repo}</registry>
                            <build>
                                <maintainer>sergey.antonov@optiscangroup.com</maintainer>
                                <from>alpine-glibc</from>
                                <tags>
                                    <tag>${build.version}</tag>
                                </tags>
                                <env>
                                    <JAVA_HOME>/usr/lib/jvm/default-jvm</JAVA_HOME>
                                </env>
                                <runCmds>
                                    <run>apk add --no-cache --virtual=build-dependencies wget ca-certificates &amp;&amp; \
                                        cd "/tmp" &amp;&amp; \
                                        wget --header "Cookie: oraclelicense=accept-securebackup-cookie;" \
                                        "http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz" &amp;&amp; \
                                        tar -xzf "jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz" &amp;&amp; \
                                        mkdir -p "/usr/lib/jvm" &amp;&amp; \
                                        mv "/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}" "/usr/lib/jvm/java-${JAVA_VERSION}-oracle" &amp;&amp; \
                                        ln -s "java-${JAVA_VERSION}-oracle" "$JAVA_HOME" &amp;&amp; \
                                        ln -s "$JAVA_HOME/bin/"* "/usr/bin/" &amp;&amp; \
                                        rm -rf "$JAVA_HOME/"*src.zip &amp;&amp; \
                                        rm -rf "$JAVA_HOME/lib/missioncontrol" \
                                        "$JAVA_HOME/lib/visualvm" \
                                        "$JAVA_HOME/lib/"*javafx* \
                                        "$JAVA_HOME/jre/lib/plugin.jar" \
                                        "$JAVA_HOME/jre/lib/ext/jfxrt.jar" \
                                        "$JAVA_HOME/jre/bin/javaws" \
                                        "$JAVA_HOME/jre/lib/javaws.jar" \
                                        "$JAVA_HOME/jre/lib/desktop" \
                                        "$JAVA_HOME/jre/plugin" \
                                        "$JAVA_HOME/jre/lib/"deploy* \
                                        "$JAVA_HOME/jre/lib/"*javafx* \
                                        "$JAVA_HOME/jre/lib/"*jfx* \
                                        "$JAVA_HOME/jre/lib/amd64/libdecora_sse.so" \
                                        "$JAVA_HOME/jre/lib/amd64/"libprism_*.so \
                                        "$JAVA_HOME/jre/lib/amd64/libfxplugins.so" \
                                        "$JAVA_HOME/jre/lib/amd64/libglass.so" \
                                        "$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so" \
                                        "$JAVA_HOME/jre/lib/amd64/"libjavafx*.so \
                                        "$JAVA_HOME/jre/lib/amd64/"libjfx*.so &amp;&amp; \
                                        apk del build-dependencies &amp;&amp; \
                                        rm "/tmp/"*</run>
                                </runCmds>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>